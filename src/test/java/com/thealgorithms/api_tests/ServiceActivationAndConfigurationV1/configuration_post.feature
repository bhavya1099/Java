# ********RoostGPT********

# Test generated by RoostGPT for test integration-scenarioTab-test using AI Type  and AI Model 
# 
# Feature file generated for /configuration_post for http method type POST 
# RoostTestHash=f72d56dc59
# 
# 

# ********RoostGPT********
Feature: Activation and Configuration Service Opening

  Background:
    * def urlBase = karate.properties['iout_URL_BASE'] || karate.get('urlBase', 'http://localhost:4010')
    * url urlBase
    * configure headers = { Authorization: #(karate.properties['iout_AUTH_TOKEN']) }

  Scenario Outline: Configure Service for various actions
    Given path '/configuration'
    And request
      """
      <requestBody>
      """
    When method post
    Then status 200
    And match response.control.type == '#string'
    And match response.control.message == '#string'
    And match response.control.code == '#string'
    And match response.configuration.action.type == '<actionType>'
    And match response.configuration.action.parameters.frequencyBand == '<frequencyBand>'
    And match response.configuration.customer.subscriberId == '<subscriberId>'
    And match response.configuration.id == '#string'
    And match response == '#object'

    Examples:
      | read('configuration_post.csv') |

  Scenario: Unauthorized Access
    Given path '/configuration'
    And request
      """
      { "configuration": { "action": { "type": "HGW_WIFI_ENABLE", "parameters": { "frequencyBand": "2.4GHz" } }, "customer": { "subscriberId": "SVTAL001" } } }
      """
    When method post
    Then status 401
    And match response.control.type == 'E'
    And match response.control.code == '401'
    And match response.control.message == 'Unauthorized'

  Scenario: Bad Request Response
    Given path '/configuration'
    And request
      """
      { "configuration": {} }
      """
    When method post
    Then status 400
    And match response.control.type == 'E'
    And match response.control.code == '400'
    And match response.control.message == 'Bad Request'
